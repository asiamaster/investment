<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.uap.dao.MenuMapper">
  <resultMap id="BaseResultMap" type="com.dili.uap.domain.Menu">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="system_id" jdbcType="BIGINT" property="systemId" />
    <result column="order_number" jdbcType="INTEGER" property="orderNumber" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="target" jdbcType="INTEGER" property="target" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, parent_id, system_id, order_number, url, name, description, target, created, modified, type,
    icon_cls
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=BIGINT}
  </select>


  <!-- ============================== SQL分割线 ============================== -->

  <sql id="column_List">
    m.id
    ,m.parent_id
    ,m.system_id
    ,m.order_number
    ,m.url
    ,m.`name`
    ,m.description
    ,m.target
    ,m.created
    ,m.modified
    ,m.icon_cls
    ,m.`type`
  </sql>

  <!--根据用户id查询所有菜单 -->
  <select id="listByUserId" parameterType="Long" resultMap="BaseResultMap">
    SELECT DISTINCT
    <include refid="column_List" />
    from menu m, role_menu rm, user_role ur
    where m.id = rm.menu_id
    and rm.role_id = ur.role_id
    and ur.user_id = #{userId}
    order by m.order_number
  </select>

  <!--根据用户id查询目录和链接菜单 -->
  <select id="listDirAndLinksByUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT DISTINCT
    <include refid="column_List" />
    from menu m, role_menu rm, user_role ur, `system` s
    where m.id = rm.menu_id
    and rm.role_id = ur.role_id
    and m.system_id = s.id
    and ur.user_id = #{userId}
    and s.code=#{systemCode}
    and (m.`type` = 0 or m.`type` = 1)
    order by m.order_number
  </select>

  <!-- 查询上级菜单 -->
  <select id="getParentMenus" parameterType="java.lang.String" resultType="string">
    select getParentMenus(#{id})
  </select>

  <!-- 查询菜单详情，包含系统信息 -->
  <select id="getMenuDetailByUrl" parameterType="java.lang.String" resultType="map">
    select m.id
      ,m.parent_id
      ,m.system_id
      ,m.order_number
      ,m.url
      ,m.`name`
      ,m.description
      ,m.target
      ,m.created
      ,m.modified
      ,m.icon_cls
      ,m.`type`
      ,s.code system_code
      ,s.name system_name
      ,s.`type`
      from menu m, `system` s where m.system_id = s.id
      and m.url=#{url}
  </select>

  <!-- 列出所有系统和菜单 -->
  <select id="listSystemMenu" parameterType="java.lang.String" resultType="map">
    (select concat('menu_',m.id) as id
        , case when m.parent_id is null then concat('sys_',m.system_id) else concat('menu_',m.parent_id) end as parent_id
        ,m.`name`
        ,m.`type`
        ,m.`system_id`
        from menu m order by m.order_number)
    union all
        select concat('sys_',s.id) as id
            , null as parent_id
         ,s.name
         ,4 as 'type'
         ,s.id as system_id
          from `system` s
  </select>
</mapper>